# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches:
      - 'learn_branch'

permissions:
  contents: read

env:
  VERSION_FILE: "polimer_solibity_calculator/version.py"

jobs:
  deploy:
    runs-on: [ self-hosted ]

    steps:
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: '3.8'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install setuptools wheel 

    - name: Check out the repository
      uses: actions/checkout@v4

#    - name: Set interrupt
#      uses: mxschmitt/action-tmate@v3
#      with:
#        limit-access-to-actor: false

    - name: Forward major version
      if: github.ref == 'refs/heads/master'
      run: |
        VERSION=$(python3 version_info.py ${{ env.VERSION_FILE }} major forward 1)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Forward minor version
      if: github.ref != 'refs/heads/master'
      run: |
        VERSION=$(python3 version_info.py ${{ env.VERSION_FILE }} minor forward 1)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Print version (for debugging)
      run: echo "VERSION=${{ env.VERSION }}"

    - name: Commit version
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      run: |
        git config --global user.name ${{ secrets.GIT_USER }}
        git config --global user.email ${{ secrets.GIT_MAIL }}
        git config --global --list
        git status
        git add ${{ env.VERSION_FILE }}
        git commit -m "Automated version ${{ env.VERSION }} commit"

    - name: Git Push
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      run: |
        git push origin ${{ github.ref }}
        

    - name: Build package
      run: |
        python3 setup.py bdist_wheel

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
